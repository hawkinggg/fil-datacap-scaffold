/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    YourContract: {
      address: "0x700b6A60ce7EaaEA56F065753d8dcB9653dbAD35",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "greeting",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "premium",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setGreeting",
          inputs: [
            {
              name: "_newGreeting",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "totalCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "userGreetingCounter",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "GreetingChange",
          inputs: [
            {
              name: "greetingSetter",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newGreeting",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "premium",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
    },
    AllocatorEVM: {
      address: "0xA15BB66138824a1c7167f5E85b957d04Dd34E468",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "router",
              type: "address",
              internalType: "address",
            },
            {
              name: "_gateway",
              type: "address",
              internalType: "address",
            },
            {
              name: "_gasReceiver",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "acceptOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "destinationAddress",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "destinationChain",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "execute",
          inputs: [
            {
              name: "commandId",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "sourceChain",
              type: "string",
              internalType: "string",
            },
            {
              name: "sourceAddress",
              type: "string",
              internalType: "string",
            },
            {
              name: "payload",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "gasService",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IAxelarGasService",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "gateway",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IAxelarGateway",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "handleOracleFulfillment",
          inputs: [
            {
              name: "requestId",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "response",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "err",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_lastError",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_lastRequestId",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_lastResponse",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_source",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "sendRequest",
          inputs: [
            {
              name: "encryptedSecretsUrls",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "donHostedSecretsSlotID",
              type: "uint8",
              internalType: "uint8",
            },
            {
              name: "donHostedSecretsVersion",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "args",
              type: "string[]",
              internalType: "string[]",
            },
            {
              name: "bytesArgs",
              type: "bytes[]",
              internalType: "bytes[]",
            },
            {
              name: "subscriptionId",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "gasLimit",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "donID",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "requestId",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setDestinationAddress",
          inputs: [
            {
              name: "destination",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setDestinationChain",
          inputs: [
            {
              name: "destination",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setRemoteValue",
          inputs: [],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "setSource",
          inputs: [
            {
              name: "source",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "OwnershipTransferRequested",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RequestFulfilled",
          inputs: [
            {
              name: "id",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RequestSent",
          inputs: [
            {
              name: "id",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Response",
          inputs: [
            {
              name: "requestId",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "response",
              type: "bytes",
              indexed: false,
              internalType: "bytes",
            },
            {
              name: "err",
              type: "bytes",
              indexed: false,
              internalType: "bytes",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "EmptyArgs",
          inputs: [],
        },
        {
          type: "error",
          name: "EmptySecrets",
          inputs: [],
        },
        {
          type: "error",
          name: "EmptySource",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "NoInlineSecrets",
          inputs: [],
        },
        {
          type: "error",
          name: "NotApprovedByGateway",
          inputs: [],
        },
        {
          type: "error",
          name: "OnlyRouterCanFulfill",
          inputs: [],
        },
        {
          type: "error",
          name: "UnexpectedRequestID",
          inputs: [
            {
              name: "requestId",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
      ],
      inheritedFunctions: {
        handleOracleFulfillment:
          "lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol",
        acceptOwnership: "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        owner: "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        transferOwnership: "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        execute: "lib/axelar-gmp-sdk-solidity/contracts/executable/AxelarExecutable.sol",
        gateway: "lib/axelar-gmp-sdk-solidity/contracts/executable/AxelarExecutable.sol",
      },
    },
  },
  314159: {
    AllocatorFEVM: {
      address: "0x7711479471DeF59f32Ebf9b5AC168a02A6ea3FFc",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_gateway",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "acceptOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "execute",
          inputs: [
            {
              name: "commandId",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "sourceChain",
              type: "string",
              internalType: "string",
            },
            {
              name: "sourceAddress",
              type: "string",
              internalType: "string",
            },
            {
              name: "payload",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "gateway",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IAxelarGateway",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "message",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "setSourceAddress",
          inputs: [
            {
              name: "_sourceAddress",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setSourceChain",
          inputs: [
            {
              name: "_sourceChain",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "sourceAddress",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "sourceChain",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Executed",
          inputs: [
            {
              name: "commandId",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
            {
              name: "_from",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "_message",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Executing",
          inputs: [
            {
              name: "commandId",
              type: "bytes32",
              indexed: false,
              internalType: "bytes32",
            },
            {
              name: "_chain",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "_addr",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "_payload",
              type: "bytes",
              indexed: false,
              internalType: "bytes",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferRequested",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "InvalidAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidSourceAddress",
          inputs: [
            {
              name: "addr",
              type: "string",
              internalType: "string",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidSourceChain",
          inputs: [
            {
              name: "chain",
              type: "string",
              internalType: "string",
            },
          ],
        },
        {
          type: "error",
          name: "NotApprovedByGateway",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
    },
  },
  11155111: {
    AllocatorEVM: {
      address: "0xE28FBe0e9a29ef88Ee7A8011Fe279690996F3400",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "router",
              type: "address",
              internalType: "address",
            },
            {
              name: "_gateway",
              type: "address",
              internalType: "address",
            },
            {
              name: "_gasReceiver",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "acceptOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "destinationAddress",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "destinationChain",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "execute",
          inputs: [
            {
              name: "commandId",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "sourceChain",
              type: "string",
              internalType: "string",
            },
            {
              name: "sourceAddress",
              type: "string",
              internalType: "string",
            },
            {
              name: "payload",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "gasService",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IAxelarGasService",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "gateway",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IAxelarGateway",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "handleOracleFulfillment",
          inputs: [
            {
              name: "requestId",
              type: "bytes32",
              internalType: "bytes32",
            },
            {
              name: "response",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "err",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_lastError",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_lastRequestId",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_lastResponse",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bytes",
              internalType: "bytes",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "s_source",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "sendRequest",
          inputs: [
            {
              name: "encryptedSecretsUrls",
              type: "bytes",
              internalType: "bytes",
            },
            {
              name: "donHostedSecretsSlotID",
              type: "uint8",
              internalType: "uint8",
            },
            {
              name: "donHostedSecretsVersion",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "args",
              type: "string[]",
              internalType: "string[]",
            },
            {
              name: "bytesArgs",
              type: "bytes[]",
              internalType: "bytes[]",
            },
            {
              name: "subscriptionId",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "gasLimit",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "donID",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          outputs: [
            {
              name: "requestId",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setDestinationAddress",
          inputs: [
            {
              name: "destination",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setDestinationChain",
          inputs: [
            {
              name: "destination",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setRemoteValue",
          inputs: [],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "setSource",
          inputs: [
            {
              name: "source",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "OwnershipTransferRequested",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RequestFulfilled",
          inputs: [
            {
              name: "id",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RequestSent",
          inputs: [
            {
              name: "id",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Response",
          inputs: [
            {
              name: "requestId",
              type: "bytes32",
              indexed: true,
              internalType: "bytes32",
            },
            {
              name: "response",
              type: "bytes",
              indexed: false,
              internalType: "bytes",
            },
            {
              name: "err",
              type: "bytes",
              indexed: false,
              internalType: "bytes",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "EmptyArgs",
          inputs: [],
        },
        {
          type: "error",
          name: "EmptySecrets",
          inputs: [],
        },
        {
          type: "error",
          name: "EmptySource",
          inputs: [],
        },
        {
          type: "error",
          name: "InvalidAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "NoInlineSecrets",
          inputs: [],
        },
        {
          type: "error",
          name: "NotApprovedByGateway",
          inputs: [],
        },
        {
          type: "error",
          name: "OnlyRouterCanFulfill",
          inputs: [],
        },
        {
          type: "error",
          name: "UnexpectedRequestID",
          inputs: [
            {
              name: "requestId",
              type: "bytes32",
              internalType: "bytes32",
            },
          ],
        },
      ],
      inheritedFunctions: {
        handleOracleFulfillment:
          "lib/chainlink-brownie-contracts/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol",
        acceptOwnership: "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        owner: "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        transferOwnership: "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        execute: "lib/axelar-gmp-sdk-solidity/contracts/executable/AxelarExecutable.sol",
        gateway: "lib/axelar-gmp-sdk-solidity/contracts/executable/AxelarExecutable.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
